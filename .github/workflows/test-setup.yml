name: Setup Test User

on:
  workflow_dispatch:

jobs:
  setup-test-user:
    name: Create Test User
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Create Admin Test User
        run: |
          # Créer un admin de test via l'API Supabase
          RESPONSE=$(curl -X POST "${{ secrets.VITE_SUPABASE_URL }}/auth/v1/admin/users" \
            -H "apikey: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" \
            -H "Authorization: Bearer ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{
              "email": "${{ secrets.TEST_USER_EMAIL }}",
              "password": "${{ secrets.TEST_USER_PASSWORD }}",
              "email_confirm": true,
              "user_metadata": {
                "full_name": "Test Admin"
              }
            }')
          
          echo "User creation response: $RESPONSE"
          USER_ID=$(echo $RESPONSE | jq -r '.id')
          
          if [ "$USER_ID" = "null" ]; then
            echo "❌ Failed to create user"
            exit 1
          fi
          
          echo "✅ Test user created: $USER_ID"
          
      - name: Assign Admin Role
        run: |
          # Récupérer l'ID utilisateur
          USER_RESPONSE=$(curl -X GET "${{ secrets.VITE_SUPABASE_URL }}/auth/v1/admin/users?email=eq.${{ secrets.TEST_USER_EMAIL }}" \
            -H "apikey: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" \
            -H "Authorization: Bearer ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}")
          
          USER_ID=$(echo $USER_RESPONSE | jq -r '.[0].id')
          
          # Créer le rôle admin
          curl -X POST "${{ secrets.VITE_SUPABASE_URL }}/rest/v1/user_roles" \
            -H "apikey: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" \
            -H "Authorization: Bearer ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" \
            -H "Content-Type: application/json" \
            -H "Prefer: return=minimal" \
            -d "{\"user_id\": \"$USER_ID\", \"role\": \"admin\"}"
          
          # Créer le profil teacher
          curl -X POST "${{ secrets.VITE_SUPABASE_URL }}/rest/v1/teacher_profiles" \
            -H "apikey: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" \
            -H "Authorization: Bearer ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" \
            -H "Content-Type: application/json" \
            -H "Prefer: return=minimal" \
            -d "{\"user_id\": \"$USER_ID\", \"email\": \"${{ secrets.TEST_USER_EMAIL }}\", \"full_name\": \"Test Admin\"}"
          
          # Créer l'entrée teachers
          curl -X POST "${{ secrets.VITE_SUPABASE_URL }}/rest/v1/teachers" \
            -H "apikey: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" \
            -H "Authorization: Bearer ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" \
            -H "Content-Type: application/json" \
            -H "Prefer: return=minimal" \
            -d "{\"user_id\": \"$USER_ID\", \"full_name\": \"Test Admin\"}"
          
          echo "✅ Admin role and profiles created"
             
      - name: Setup Complete
        run: echo "✅ Test user setup completed successfully"
